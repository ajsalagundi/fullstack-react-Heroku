{"version":3,"sources":["portrait.PNG","Components/Header.js","Components/About.js","Components/Modal.js","Components/Projects.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","viewBox","xmlns","d","href","React","Component","About","id","src","pic","alt","style","height","Modal","props","useState","showModal","setShowModal","type","transition","onClick","name","message","Projects","Footer","paddingBottom","icon","faLinkedin","faInstagram","faFacebook","faTwitter","faGithub","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.dbf896a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.3b42070d.PNG\";","import React from 'react';\n\nexport default class Header extends React.Component {\n    render(){\n        return(\n            <nav className=\"sticky flex items-center justify-between flex-wrap bg-orange-600 p-4\">\n                <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n                    <span className=\"font-semibold text-3xl tracking-tight ml-20 text-orange-200\">AS</span>\n                </div>\n                <div className=\"block lg:hidden\">\n                    <button\n                        className=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\n                        <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <title>Menu</title>\n                            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"/>\n                        </svg>\n                    </button>\n                </div>\n                <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\n                    <div className=\"text-sm flex w-full justify-end text-orange-200\">\n                        <a href=\"#about\"\n                           className=\"flex text-xl hover:text-white hover:bg-gray-900 px-3 mr-10\">\n                            About\n                        </a>\n                        <a href=\"#projs\"\n                           className=\"flex text-xl hover:text-white hover:bg-gray-900 px-3 mr-10\">\n                            Projects\n                        </a>\n                        <a href=\"#contact\"\n                           className=\"flex text-xl hover:text-white hover:bg-gray-900 px-3 mr-20\">\n                            Contact\n                        </a>\n                    </div>\n                </div>\n            </nav>\n\n        )\n    }\n}","import React from 'react';\nimport pic from '../portrait.PNG';\n\nexport default class About extends React.Component {\n    render(){\n        return(\n            <section id={\"about\"} className={\"w-screen flex h-screen bg-gray-900\"}>\n                <div className=\"flex items-center justify-center w-1/2 h-full\">\n                    <img className={\"self-center w-3/5 h-3/5 ml-10 mt-24\"} src={pic} alt=\"\"/>\n                </div>\n                <div className=\"flex items-center justify-center w-1/2 h-full\">\n                    <div className=\"rounded overflow-hidden shadow-2xl w-3/5 bg-orange-600 mr-10\" style={{height: '50%'}}>\n                        <div className=\"text-center font-bold text-5xl text-gray-800 mt-6\">A Little About Me</div>\n                        <p className=\"text-left text-gray-900 text-lg mx-10 mt-6\">\n                            I'm a resourceful and meticulous Software Engineering intern excited to leverage classroom knowledge and experience in a technical environment to develop complex, end-to-end software solutions. I have experience in Java, HTML, CSS, JS and MERN, with proficient knowledge in C++, web hosting technologies, and automated testing.\n                        </p>\n                        <div className=\"p-6 pt-10 flex justify-around\">\n                            <span className=\"inline-block bg-gray-900 rounded-full px-3 py-1 text-sm font-semibold text-gray-200\">#JS</span>\n                            <span className=\"inline-block bg-gray-900 rounded-full px-3 py-1 text-sm font-semibold text-gray-200\">#HTML</span>\n                            <span className=\"inline-block bg-gray-900 rounded-full px-3 py-1 text-sm font-semibold text-gray-200\">#CSS</span>\n                            <span className=\"inline-block bg-gray-900 rounded-full px-3 py-1 text-sm font-semibold text-gray-200\">#MERN</span>\n                            <span className=\"inline-block bg-gray-900 rounded-full px-3 py-1 text-sm font-semibold text-gray-200\">#Java</span>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}","import React from \"react\";\n\nexport default function Modal(props){\n    const [showModal, setShowModal] = React.useState(false);\n\n    return(\n        <>\n            <button\n                className=\"text-center font-bold text-4xl text-gray-800\"\n                type={\"button\"}\n                style={{transition: \" all .15s ease\"}}\n                onClick={() => setShowModal(true)}\n            >{props.name}\n            </button>\n            {showModal ? (\n                <>\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                        onClick={() => setShowModal(false)}\n                    >\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-orange-600 outline-none focus:outline-none\">\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-900 rounded-t\">\n                                    <h3 className=\"text-3xl font-semibold text-orange-200\">\n                                        {props.name}\n                                    </h3>\n                                    <button\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                        onClick={() => setShowModal(false)}\n                                    >\n                                            <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none hover:text-gray-200\">\n                                                x\n                                            </span>\n                                    </button>\n                                </div>\n                                <div className=\"relative p-6 flex-auto\">\n                                    <p className=\"my-4 text-orange-200 text-lg leading-relaxed\">\n                                        {props.message}\n                                    </p>\n                                </div>\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-900 rounded-b\">\n                                    <button\n                                        className=\"text-gray-100 bg-gray-900 font-bold uppercase px-6 py-2 text-sm rounded hover:bg-gray-200 hover:text-orange-700 mr-1 mb-1\"\n                                        type={\"button\"}\n                                        style={{transition: \"all .15s ease\"}}\n                                        onClick={() => setShowModal(false)}\n                                    >\n                                        Close\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </>\n            ): null}\n        </>\n    )\n};\n","import React from \"react\";\nimport Modal from \"./Modal\";\n\nexport default class Projects extends React.Component {\n    render() {\n        return (\n            <section id={\"projs\"} className={\"w-screen flex bg-gray-900 pb-10\"} style={{height: '800px'}}>\n                <div className=\"container mx-auto px-4 grid grid-cols-2 gap-4 w-full flex\">\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"Partner Portal\"} message={\"This project entailed the construction of a portal for the company's affiliates to view relevant information. For example, since Mercatalyst is an eCommerce firm,\\n\" +\n                            \"                                        the portal would be designed for their affiliates, such as suppliers, shippers, and others, to view information that is relevant to them. This project was where I\\n\" +\n                            \"                                        was first introduced to the MERN stack, where by we stored partner information in a MongoDB database, used Mongoose for handling object modeling, and routed using\\n\" +\n                            \"                                        ExpressJS and RESTful API concepts. We attempted to utilize React as our front-end development framework, however the middleware software they had previously implemented\\n\" +\n                            \"                                        (Electricity) was not able to handle ReactJSX language, and we were thus reduced to developing views with EJS templating engine, HTML, and CSS. This was also where\\n\" +\n                            \"                                        I was first exposed to Postman and TravisCI as tools for software development.\"}/>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"Bloodhound\"} message={\"Bloodhound was focused on developing a module that delivered a streamlined response to a tracking request. More specifically, a user would send in a request to receive the latest tracking information regarding a package, and the response would contain a clean and unified message that said where the package was, what was the latest movements, and so forth, regardless of the carrier. I specifically worked on providing support for UPS. This project provided us with an experience in working in a NodeJS development environment.\"}/>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"Slackbot\"} message={\"Slackbot was specifically designed for our company's employees as a way to track packages using Bloodhound. This project gave me exposure in creating automated message bots using Slack's API, which was completely different that developing a web platform. \"}/>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"Search Hero Module\"} message={\"The goal for the search hero module was for customers to utilize enhanced search engine features to research different products that we had offered for one of our services. We had to constrain the search engine to display results that would fit the description of what the user provided and detailed the UI to be similar to those of the big-box retailers. This project was based solely on HTML, CSS, and the usage of lunr, a client-side search engine. \"}/>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"CPU/Memory Simulation\"} message={\"This was a school project where we had to simulate the interprocess communication between the CPU and the Memory module. Essentially, we had a set of 32 instructions that the Memory class would store and relay the result of the instruction back to the CPU class, as it would in a real computer. The results of the instruction were decoded and displayed in real-time to an output file. Complexities emerged when I was attempting to set up the communication between the two classes in Java. To solve this issue, I used a StringBuffer to cache the instruction from Memory and set the buffer to read the Memory class's output from the CPU class. \"}/>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"OS Scheduling\"} message={\"The Operating System Scheduling project was a detailed simulation of several of the basic uniprocessor scheduling methods taught. They included First Come First Served (FCFS), Round Robin (RR), Shortest Response Time (SRT), Shortest Process Next (SPN), Highest Response Ratio Next (HRRN), and Feedback (with 3 queues).\"}/>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"Calculus Calculator\"} message={\"This was a unique project I developed in C++ where I had to use a binary tree to calculate the result of basic calculus equations (simple derivatives and integrals) and display the result to a text file.\"}/>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center h-16 mb-16\">\n                        <div className=\"flex items-center justify-center rounded overflow-hidden shadow-2xl w-full h-full mx-10 bg-orange-600\">\n                            <Modal name={\"MIPS Cache Sorting\"} message={\"The cache sorting project was where I had to write instructions in Assembly to sort an array of numbers using both Bubble Sort and Merge Sort, and store the results back into the MIPS memory unit. \"}/>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faInstagram, faTwitter, faFacebook, faGithub} from \"@fortawesome/free-brands-svg-icons\";\n\nexport default class Footer extends React.Component{\n    render() {\n        return (\n            <section id={\"contact\"} className={\"w-screen flex bg-orange-600\"} style={{paddingBottom: '3%'}}>\n                <div className=\"container mx-auto px-64 w-full\">\n                    <div className=\"text-center font-bold text-4xl text-gray-900 mt-12 w-auto\">Contact Me At</div>\n                    <div className=\"text-center font-semibold text-xl text-gray-900 mt-2 w-auto\">+1 609 208 4589</div>\n                    <div className=\"text-center font-semibold text-xl text-gray-900 mt-2 w-auto\"><a href={\"mailto:ajsalagundi@gmail.com\"}>ajsalagundi@gmail.com</a></div>\n                    <ul className=\"mt-4 w-1/2 list-none flex justify-between mx-auto\">\n                        <li className={\"inline-block text-3xl text-gray-900\"}><a href=\"https://www.linkedin.com/in/ananth-salagundi/\"><FontAwesomeIcon icon={ faLinkedin }/></a></li>\n                        <li className={\"inline-block text-3xl text-gray-900\"}><a href=\"https://www.instagram.com/aj_salagundi/\"><FontAwesomeIcon icon={ faInstagram }/></a></li>\n                        <li className={\"inline-block text-3xl text-gray-900\"}><a href=\"https://www.facebook.com/ananth.salagundi/\"><FontAwesomeIcon icon={ faFacebook }/></a></li>\n                        <li className={\"inline-block text-3xl text-gray-900\"}><a href=\"https://twitter.com/TheAntIsAwesome\"><FontAwesomeIcon icon={ faTwitter }/></a></li>\n                        <li className={\"inline-block text-3xl text-gray-900\"}><a href=\"https://github.com/ajsalagundi\"><FontAwesomeIcon icon={ faGithub }/></a></li>\n                    </ul>\n                </div>\n            </section>\n        );\n    }\n}","import React from 'react';\nimport Header from './Components/Header';\nimport About from './Components/About';\nimport Projects from \"./Components/Projects\";\nimport Footer from \"./Components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n    <Header/>\n    <About/>\n    <Projects/>\n    <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Assets/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}